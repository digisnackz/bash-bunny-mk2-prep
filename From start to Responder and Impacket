# May 25, 2023
# Last updated Aug 17, 2023
# Read the README.md
# Inspiration from dark-pyrro
# https://codeberg.org/dark_pyrro/BB2-Impacket/wiki/Setting-the-Bunny-up-for-Impacket
#
# Get your Bash Bunny Mk2 online then,
#
# Commands are executed down the line in order.
# Bash Bunny Mk 2
apt-get clean

# setting date avoids some errors, change these to actual time
timedatectl set-time 'YYYY-MM-DD HH:MM:SS'
timedatectl set-timezone <current-timzone>

# recovering missing keys
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138 0E98404D386FA1D9

# nandf is vfat, mountable but not compatible with installing apps
# we will have to mount external storage for more space on bb
# format sdcard to fat32, we may also create two partitions
# one for storage one for a swapfile. swap fat32, storage ext4

# Better to make swapfile and not need it, then need it. I've almost always needed one on
# install rustc for some reason.

mount /dev/mmcblk0p1 /root/sdisk
mkswap /dev/mmcblk0p5
blkid
nano /etc/fstab

# input this into fstab X's being your UUID 
UUID=XXXXXXx-xXXXX-XXXX none swap sw,pri=5 0 0


# Script to streamline fixing sources. Made after too many resets.

sources=("deb http://archive.debian.org/debian/ jessie-backports main"
"deb-src http://archive.debian.org/debian/ jessie-backports main"
"deb http://archive.debian.org/debian jessie main contrib non-free"
"deb-src http://archive.debian.org/debian jessie main contrib non-free"
"deb http://archive.debian.org/debian stretch main"
"deb-src http://archive.debian.org/debian stretch main"
"deb http://archive.debian.org/debian stretch-backports main"
"deb-src http://archive.debian.org/debian stretch-backports main")
for source in "${sources[@]}"; do
    echo "$source" | tee -a /etc/apt/sources.list
done

# getting ready for python3 and openssl
apt update && apt upgrade -y
apt install build-essential libgdbm-dev libnss3-dev libffi-dev gcc pkg-config --force-yes -y

mkdir /root/sdisk
cd /root/sdisk
mkdir /root/sdisk/python3
cd /root/sdisk/python3

# latest responder and impacket confirmed working with python 3.9 and future proof at
# least if either app updates
wget --no-check-certificate https://www.python.org/ftp/python/3.9.16/Python-3.9.16.tar.xz
tar -xvf Python-3.9.16.tar.xz
rm Python-3.9.16.tar.xz

# check unpack
cd Python-3.9.16

cd /root/sdisk/python3
mkdir openssl3_build
wget --no-check-certificate https://www.openssl.org/source/openssl-3.0.0.tar.gz
tar -xvf openssl-3.0.0.tar.gz
rm openssl-3.0.0.tar.gz
cd openssl-3.0.0

# you can check where current openssl is installed with:
find /etc/ -name openssl.cnf -printf "%h\n"
# it's /etc/ssl. this goes in --openssldir=/
./config --prefix=/root/sdisk/python3/openssl3_build --openssldir=/etc/ssl -Wl,-Bsymbolic-functions -fPIC shared

# these take a while
make
# will still install if certs expired
make test
make install

cd /root/sdisk/python3/Python3.9.1

# Setup.dist file below may be named just Setup.
nano /Modules/Setup.dist

# remove the hashes in front of these lines and leave indentation.
_socket socketmodule.c
SSL=/root/sdisk/python3/openssl3_build
_ssl _ssl.c
        -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl
        -L$(SSL)/lib -lssl -lcrypto

# save and exit

cp /Modules/Setup /Modules/Setup.org
cp /Modules/Setup /Modules/Setup.dist
nano /etc/ld.so.conf

# add this next line to ld.so.conf
/root/sdisk/python3/openssl3_build/lib/
# then run
ldconfig

cd /root/sdisk/python3/Python-3.9.16
./configure --enable-optimizations

# if you see creating makefile at the end of configuration, install
make install

# double check version
python3 --version
python3

# no errors on output of 'import ssl' then continue
import ssl
pip3 -V
python3.9 -m pip install --upgrade pip

# install rustc 
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

# lets create some more storage because we run out around the cryptography install.
# your paths might differ, so find out where these are located.
rm -rf $HOME/.cargo/doc
rm -rf $HOME/.rustup/toolchains/*/share/doc/rust
rm -rf /usr/share/man/man1/rustup*.1.gz
rm -rf /usr/share/man/man1/cargo*.1.gz
rm -rf /usr/share/man/man1/rust*.1.gz

nano /etc/profile
# change this line
# export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/usr/local/bunny/bin:/tools
# to
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/usr/local/bunny/bin:/tools:/root/.cargo/bin:/root/sdisk/python3/openssl3_build/bin
# and add 
export RUSTUP_HOME=/root/.rustup
export CARGO_HOME=/root/.cargo
export CFLAGS="-I/root/sdisk/python3/openssl3_build/include"
export LDFLAGS="-L/root/sdisk/python3/openssl3_build/lib"
# save and exit
source /etc/profile

# check for rustc
rustc --version

nano /etc/ld.so.conf.d/openssl-3.0.0.conf

# add to openssl-3.0.0.conf
/root/sdisk/python3/openssl3_build/lib
# save and exit

# run
ldconfig -v

# dependencies for impacket and responder
pip3 install wheel 'setuptools>=58.5.3' 'setuptools-rust>=0.11.4' chardet pycryptodomex 'pyasn1>=0.2.3 'ldap3>=2.5,!=2.5.2,!=2.5.0,!=2.6' 
future 'ldapdomaindump>=0.9.0' 'flask>=1.0' 'cffi>=1.12' virtualenv netifaces

pip3 install cryptography==35.0.0 

pip3 install pyopenssl

# then here it is~ 
python3.9 -m pip install impacket --target /tools
python3.9 -m pip install responder --target /tools

# to automatically mount sdcard
nano /etc/fstab
# insert this at the end somewhere
/dev/mmcblk0p1 /root/sdisk auto defaults 0 0

# at this point both packages are ready for use. These can be installed from source too, but this worked for me.
